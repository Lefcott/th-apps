name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      stage:
        required: true
        description: Environment to deploy to. Valid options are "dev", "staging", and "production"
        default: staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check stage validity
        run: |
          branch=${GITHUB_REF#refs/heads/}
          env=${{ github.event.inputs.stage }}
          echo "Deploying branch ${branch} to ${env}"
          if ([ $env == 'dev' ] || [ $env == 'staging' ] || [ $env == 'production' ])
          then
            echo "Valid stage provided, continuing"
          else
            echo "Input doesn't match possible envs"
            exit 1
          fi

          if ([ $env == 'production' ] && [ $branch != 'master'])
          then echo "Production must be deployed off of the master branch"
            exit 1
          fi
      - uses: actions/checkout@v2
      - run: npm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
      - run: npm ci
      - run: npm test
      - run: npm run build
        env:
          K4_ENV: ${{ github.event.inputs.stage }}
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy
        run: |
          echo Deploying bundle to ${{ github.event.inputs.stage }}_bucket
          aws s3 cp --recursive ./dist ${{ env[format('{0}_bucket', github.event.inputs.stage)] }}
          echo "Invalidating cloudfront cache for ${{ github.event.inputs.stage }}"
          echo ${{ env[format('{0}_cloudfront', github.event.inputs.stage)] }}
          aws cloudfront create-invalidation --distribution-id ${{ env[format('{0}_cloudfront', github.event.inputs.stage)] }} --paths /\*
        env:
          dev_bucket: s3://apps-dev.k4connect.com/teamhub/resident-check-in
          staging_bucket: s3://apps-staging.k4connect.com/teamhub/resident-check-in
          production_bucket: s3://apps.k4connect.com/teamhub/resident-check-in
          dev_cloudfront: ${{ secrets.DEV_CLOUDFRONT }}
          staging_cloudfront: ${{ secrets.STAGING_CLOUDFRONT }}
          production_cloudfront: ${{ secrets.PROD_CLOUDFRONT }}
